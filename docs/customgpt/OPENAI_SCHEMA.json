{
  "openapi": "3.1.0",
  "info": {
    "title": "Crypto Analyzer GPT API",
    "description": "Professional cryptocurrency technical analysis API with real-time market data, technical indicators, sentiment analysis, and news aggregation for CustomGPT integration.",
    "version": "2.0.0",
    "contact": {
      "name": "Crypto Analyzer GPT",
      "url": "https://github.com/ghiemer/crypto-analyzer-gpt"
    }
  },
  "servers": [
    {
      "url": "https://your-crypto-analyzer-app.onrender.com",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/telegram/send": {
      "post": {
        "summary": "Send message to Telegram",
        "description": "Send a general message to the configured Telegram chat for notifications and alerts.",
        "operationId": "sendTelegramMessage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TelegramMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Message sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Telegram bot not configured"
          },
          "500": {
            "description": "Failed to send message"
          }
        }
      }
    },
    "/telegram/signal": {
      "post": {
        "summary": "Send trading signal to Telegram",
        "description": "Send a formatted trading signal with entry, targets, and stop loss to Telegram.",
        "operationId": "sendTradingSignal",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradingSignal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trading signal sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Trading signal sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Telegram bot not configured"
          },
          "500": {
            "description": "Failed to send signal"
          }
        }
      }
    },
    "/telegram/alert": {
      "post": {
        "summary": "Send price alert to Telegram",
        "description": "Send a price alert notification to Telegram for breakouts, support/resistance levels, or price changes.",
        "operationId": "sendPriceAlert",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceAlert"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Price alert sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Price alert sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Telegram bot not configured"
          },
          "500": {
            "description": "Failed to send alert"
          }
        }
      }
    },
    "/gpt-alerts/price-above": {
      "post": {
        "summary": "Create price above alert",
        "description": "Create an alert that triggers when the price goes above a specified target price. Perfect for breakout notifications and profit-taking alerts.",
        "operationId": "createPriceAboveAlert",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "description": "Trading pair symbol (e.g., BTCUSDT, ETHUSDT)",
            "schema": {
              "type": "string",
              "example": "ETHUSDT"
            }
          },
          {
            "name": "target_price",
            "in": "query",
            "required": true,
            "description": "Target price threshold - alert triggers when price goes above this value",
            "schema": {
              "type": "number",
              "format": "float",
              "example": 3800.0
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Custom description for the alert",
            "schema": {
              "type": "string",
              "example": "ðŸš€ ETH broke above $3800! Bullish breakout confirmed."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alert created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Unauthorized - invalid API key"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/gpt-alerts/price-below": {
      "post": {
        "summary": "Create price below alert",
        "description": "Create an alert that triggers when the price goes below a specified target price. Perfect for stop-loss notifications and entry point alerts.",
        "operationId": "createPriceBelowAlert",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "description": "Trading pair symbol (e.g., BTCUSDT, ETHUSDT)",
            "schema": {
              "type": "string",
              "example": "ETHUSDT"
            }
          },
          {
            "name": "target_price",
            "in": "query",
            "required": true,
            "description": "Target price threshold - alert triggers when price goes below this value",
            "schema": {
              "type": "number",
              "format": "float",
              "example": 3200.0
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Custom description for the alert",
            "schema": {
              "type": "string",
              "example": "ðŸ“‰ ETH fell below $3200 support! Consider buying the dip."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alert created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Unauthorized - invalid API key"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/gpt-alerts/breakout": {
      "post": {
        "summary": "Create breakout alert",
        "description": "Create an alert that triggers when price breaks out above a resistance level with volume confirmation. Perfect for momentum trading alerts.",
        "operationId": "createBreakoutAlert",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "description": "Trading pair symbol (e.g., BTCUSDT, ETHUSDT)",
            "schema": {
              "type": "string",
              "example": "BTCUSDT"
            }
          },
          {
            "name": "resistance_level",
            "in": "query",
            "required": true,
            "description": "Resistance level to break above",
            "schema": {
              "type": "number",
              "format": "float",
              "example": 45000.0
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Custom description for the alert",
            "schema": {
              "type": "string",
              "example": "ðŸš€ BTC breakout above $45K resistance! Momentum building."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alert created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Unauthorized - invalid API key"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/gpt-alerts/list": {
      "get": {
        "summary": "List active alerts",
        "description": "Retrieve all active alerts created by the GPT. Use this to check existing alerts before creating new ones.",
        "operationId": "listActiveAlerts",
        "responses": {
          "200": {
            "description": "List of active alerts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlertInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/gpt-alerts/delete/{alert_id}": {
      "delete": {
        "summary": "Delete specific alert",
        "description": "Delete a specific alert by its ID. Use this to remove outdated or triggered alerts.",
        "operationId": "deleteAlert",
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "description": "Alert ID to delete",
            "schema": {
              "type": "string",
              "example": "9846534a-31a8-4d23-a73a-84db641b3625"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alert deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Alert deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Alert not found"
          },
          "401": {
            "description": "Unauthorized - invalid API key"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/candles": {
      "get": {
        "summary": "Get candlestick data with technical indicators",
        "description": "Retrieve OHLCV candlestick data with comprehensive technical indicators for cryptocurrency analysis. This is the primary endpoint for technical analysis.",
        "operationId": "getCandleData",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "description": "Trading pair symbol (e.g., BTCUSDT, ETHUSDT)",
            "schema": {
              "type": "string",
              "example": "BTCUSDT"
            }
          },
          {
            "name": "indicators",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of technical indicators or 'all' for all indicators",
            "schema": {
              "type": "string",
              "default": "all",
              "example": "rsi,sma,ema,macd,bb,stoch"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Number of candles to retrieve (max 1000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 200
            }
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "description": "Timeframe for candlestick data",
            "schema": {
              "type": "string",
              "enum": ["1min", "3min", "5min", "15min", "30min", "1h", "2h", "4h", "6h", "12h", "1day", "3day", "1week", "1M"],
              "default": "1h"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with candlestick data and indicators",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CandleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/feargreed": {
      "get": {
        "summary": "Get Fear & Greed Index",
        "description": "Retrieve the current Fear & Greed Index value and historical data for market sentiment analysis.",
        "operationId": "getFearGreedIndex",
        "responses": {
          "200": {
            "description": "Successful response with Fear & Greed Index data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FearGreedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/news": {
      "get": {
        "summary": "Get cryptocurrency news",
        "description": "Retrieve recent news articles for a specific cryptocurrency to understand market sentiment and potential price catalysts.",
        "operationId": "getCryptoNews",
        "parameters": [
          {
            "name": "coin",
            "in": "query",
            "required": true,
            "description": "Cryptocurrency name (e.g., bitcoin, ethereum, cardano)",
            "schema": {
              "type": "string",
              "example": "bitcoin"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Number of news articles to retrieve",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with news articles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid coin parameter"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/perp/funding": {
      "get": {
        "summary": "Get perpetual futures funding rates",
        "description": "Retrieve funding rates for perpetual futures contracts to assess market sentiment and potential price pressure.",
        "operationId": "getFundingRates",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "description": "Trading pair symbol for futures (e.g., BTCUSDT)",
            "schema": {
              "type": "string",
              "example": "BTCUSDT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with funding rate data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid symbol"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/perp/oi": {
      "get": {
        "summary": "Get open interest data",
        "description": "Retrieve open interest data for perpetual futures to analyze market positioning and potential liquidation levels.",
        "operationId": "getOpenInterest",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "description": "Trading pair symbol for futures (e.g., BTCUSDT)",
            "schema": {
              "type": "string",
              "example": "BTCUSDT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with open interest data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenInterestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid symbol"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orderbook": {
      "get": {
        "summary": "Get orderbook data",
        "description": "Retrieve current orderbook data to analyze support/resistance levels and market depth.",
        "operationId": "getOrderbook",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": true,
            "description": "Trading pair symbol (e.g., BTCUSDT)",
            "schema": {
              "type": "string",
              "example": "BTCUSDT"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Number of orderbook levels to retrieve",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with orderbook data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderbookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key for authentication (accepts both X-API-Key and x-api-key)"
      }
    },
    "schemas": {
      "CandleResponse": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "timeframe": {
            "type": "string",
            "example": "1h"
          },
          "candles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Candle"
            }
          },
          "indicators": {
            "$ref": "#/components/schemas/TechnicalIndicators"
          },
          "analysis": {
            "$ref": "#/components/schemas/TechnicalAnalysis"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Candle": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "open": {
            "type": "number",
            "format": "float"
          },
          "high": {
            "type": "number",
            "format": "float"
          },
          "low": {
            "type": "number",
            "format": "float"
          },
          "close": {
            "type": "number",
            "format": "float"
          },
          "volume": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "TechnicalIndicators": {
        "type": "object",
        "properties": {
          "rsi": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Relative Strength Index values"
          },
          "sma": {
            "type": "object",
            "properties": {
              "sma_20": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "sma_50": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "sma_200": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "ema": {
            "type": "object",
            "properties": {
              "ema_12": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "ema_26": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "macd": {
            "type": "object",
            "properties": {
              "macd_line": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "signal_line": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "histogram": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "bollinger_bands": {
            "type": "object",
            "properties": {
              "upper": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "middle": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "lower": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "stochastic": {
            "type": "object",
            "properties": {
              "k_percent": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "d_percent": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "TechnicalAnalysis": {
        "type": "object",
        "properties": {
          "trend": {
            "type": "string",
            "enum": ["BULLISH", "BEARISH", "NEUTRAL"]
          },
          "momentum": {
            "type": "string",
            "enum": ["STRONG_BUY", "BUY", "NEUTRAL", "SELL", "STRONG_SELL"]
          },
          "support_levels": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "resistance_levels": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "current_price": {
            "type": "number",
            "format": "float"
          },
          "rsi_signal": {
            "type": "string",
            "enum": ["OVERSOLD", "OVERBOUGHT", "NEUTRAL"]
          },
          "macd_signal": {
            "type": "string",
            "enum": ["BULLISH", "BEARISH", "NEUTRAL"]
          }
        }
      },
      "FearGreedResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "description": "Current Fear & Greed Index value"
          },
          "classification": {
            "type": "string",
            "enum": ["Extreme Fear", "Fear", "Neutral", "Greed", "Extreme Greed"]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "previous_value": {
            "type": "integer",
            "description": "Previous day's value"
          },
          "change": {
            "type": "integer",
            "description": "Change from previous day"
          }
        }
      },
      "NewsResponse": {
        "type": "object",
        "properties": {
          "coin": {
            "type": "string",
            "example": "bitcoin"
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewsArticle"
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewsArticle": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "type": "string"
          },
          "sentiment": {
            "type": "string",
            "enum": ["POSITIVE", "NEGATIVE", "NEUTRAL"]
          }
        }
      },
      "FundingResponse": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "funding_rate": {
            "type": "number",
            "format": "float",
            "description": "Current funding rate as percentage"
          },
          "next_funding_time": {
            "type": "string",
            "format": "date-time"
          },
          "predicted_funding_rate": {
            "type": "number",
            "format": "float"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OpenInterestResponse": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "open_interest": {
            "type": "number",
            "format": "float",
            "description": "Total open interest in base currency"
          },
          "open_interest_value": {
            "type": "number",
            "format": "float",
            "description": "Total open interest in USD"
          },
          "change_24h": {
            "type": "number",
            "format": "float",
            "description": "24h change in open interest"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderbookResponse": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "example": "BTCUSDT"
          },
          "bids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderbookLevel"
            },
            "description": "Buy orders sorted by price descending"
          },
          "asks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderbookLevel"
            },
            "description": "Sell orders sorted by price ascending"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderbookLevel": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "float"
          },
          "quantity": {
            "type": "number",
            "format": "float"
          },
          "total": {
            "type": "number",
            "format": "float",
            "description": "Cumulative quantity at this level"
          }
        }
      },
      "TelegramMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The message to send to Telegram",
            "example": "ðŸ“Š BTC analysis complete. Current price: $45,000. Technical indicators suggest bullish momentum."
          },
          "analysis_type": {
            "type": "string",
            "default": "general",
            "description": "Type of analysis",
            "example": "technical"
          },
          "symbol": {
            "type": "string",
            "description": "Trading pair symbol",
            "example": "BTCUSDT"
          },
          "signal": {
            "type": "string",
            "description": "Trading signal",
            "example": "BUY"
          },
          "confidence": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "description": "Confidence level",
            "example": 85
          },
          "entry_price": {
            "type": "number",
            "description": "Entry price",
            "example": 45000.50
          },
          "target_price": {
            "type": "number",
            "description": "Target price",
            "example": 48000.00
          },
          "stop_loss": {
            "type": "number",
            "description": "Stop loss price",
            "example": 42000.00
          }
        },
        "required": ["message"]
      },
      "TradingSignal": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "description": "Trading pair symbol",
            "example": "BTCUSDT"
          },
          "signal": {
            "type": "string",
            "enum": ["BUY", "SELL", "HOLD"],
            "description": "Trading signal direction",
            "example": "BUY"
          },
          "confidence": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "description": "Confidence level (0-100)",
            "example": 85
          },
          "current_price": {
            "type": "number",
            "description": "Current market price",
            "example": 45000.50
          },
          "entry_price": {
            "type": "number",
            "description": "Recommended entry price",
            "example": 44800.00
          },
          "target_1": {
            "type": "number",
            "description": "First target price",
            "example": 46500.00
          },
          "target_2": {
            "type": "number",
            "description": "Second target price",
            "example": 48000.00
          },
          "stop_loss": {
            "type": "number",
            "description": "Stop loss price",
            "example": 42000.00
          },
          "risk_reward": {
            "type": "number",
            "description": "Risk to reward ratio",
            "example": 2.5
          },
          "analysis": {
            "type": "string",
            "description": "Detailed analysis explanation",
            "example": "RSI shows oversold conditions, MACD bullish crossover, price broke above resistance"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Signal timestamp",
            "example": "2025-01-15T14:30:00Z"
          }
        },
        "required": ["symbol", "signal", "confidence", "current_price", "entry_price", "target_1", "target_2", "stop_loss", "risk_reward", "analysis", "timestamp"]
      },
      "PriceAlert": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "description": "Trading pair symbol",
            "example": "BTCUSDT"
          },
          "current_price": {
            "type": "number",
            "description": "Current market price",
            "example": 45000.50
          },
          "alert_type": {
            "type": "string",
            "enum": ["BREAKOUT", "SUPPORT", "RESISTANCE", "RSI_EXTREME", "PRICE_CHANGE"],
            "description": "Type of price alert",
            "example": "PRICE_CHANGE"
          },
          "details": {
            "type": "string",
            "description": "Additional details about the alert",
            "example": "Price moved 0.5% in the last 5 minutes"
          },
          "change_percentage": {
            "type": "number",
            "description": "Price change percentage",
            "example": 0.5
          }
        },
        "required": ["symbol", "current_price", "alert_type"]
      },
      "AlertCreateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "alert_id": {
            "type": "string",
            "description": "Unique alert identifier",
            "example": "9846534a-31a8-4d23-a73a-84db641b3625"
          },
          "message": {
            "type": "string",
            "example": "Alert created for ETHUSDT price_above @ $3800.0"
          },
          "symbol": {
            "type": "string",
            "example": "ETHUSDT"
          },
          "alert_type": {
            "type": "string",
            "enum": ["price_above", "price_below", "breakout"],
            "example": "price_above"
          },
          "target_price": {
            "type": "number",
            "format": "float",
            "example": 3800.0
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["status", "alert_id", "message"]
      },
      "AlertInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique alert identifier",
            "example": "9846534a-31a8-4d23-a73a-84db641b3625"
          },
          "symbol": {
            "type": "string",
            "example": "ETHUSDT"
          },
          "alert_type": {
            "type": "string",
            "enum": ["price_above", "price_below", "breakout"],
            "example": "price_above"
          },
          "target_price": {
            "type": "number",
            "format": "float",
            "example": 3800.0
          },
          "description": {
            "type": "string",
            "example": "ðŸš€ ETH broke above $3800! Bullish breakout confirmed."
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": ["active", "triggered", "cancelled"],
            "example": "active"
          },
          "current_price": {
            "type": "number",
            "format": "float",
            "description": "Last known price when alert was checked",
            "example": 3750.25
          }
        },
        "required": ["id", "symbol", "alert_type", "target_price", "created_at", "status"]
      }
    }
  }
}
