version: '3.8'

services:
  crypto-analyzer-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: crypto-analyzer-dev
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for live reloading during development
      - ./app:/app/app
      - ./config:/app/config
      - ./docs:/app/docs
      - ./tests:/app/tests
    environment:
      # Development environment settings
      - ENVIRONMENT=development
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      
      # Cache settings (disable Redis for local development unless needed)
      - CACHE_ENABLED=false
      - CACHE_TTL=15
      
      # Rate limiting (disabled in development)
      - RATE_LIMIT_REQUESTS=1000
      - RATE_LIMIT_WINDOW=60
      
      # Load sensitive data from .env file
      - API_KEY=${API_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL:-redis://localhost:6379/0}
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - TG_CHAT_ID=${TG_CHAT_ID}
      - NEWS_API_KEY=${NEWS_API_KEY}
      - CRYPTOPANIC_API_KEY=${CRYPTOPANIC_API_KEY}
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - crypto-dev

  # Optional: Local Redis for testing (if you want to test caching locally)
  redis-dev:
    image: redis:7-alpine
    container_name: crypto-redis-dev
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-dev-data:/data
    networks:
      - crypto-dev
    profiles:
      - redis  # Only start with: docker-compose --profile redis up

networks:
  crypto-dev:
    driver: bridge

volumes:
  redis-dev-data:
    driver: local
