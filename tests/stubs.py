# Type stubs for external libraries
from typing import Any, Dict, List, Optional, Union, Awaitable

# Redis async stubs
class AsyncRedis:
    def hset(self, name: str, key: str, value: str) -> Awaitable[int]: ...
    def hdel(self, name: str, *keys: str) -> Awaitable[int]: ...
    def hgetall(self, name: str) -> Awaitable[Dict[str, str]]: ...
    def keys(self, pattern: str) -> Awaitable[List[str]]: ...
    def setnx(self, name: str, value: Any) -> Awaitable[bool]: ...
    def expire(self, name: str, time: int) -> Awaitable[bool]: ...

# FastAPI Cache stubs
class FastAPICache:
    @staticmethod
    def get(key: str) -> Awaitable[Any]: ...
    @staticmethod
    def set(key: str, value: Any, expire: int = 60) -> Awaitable[None]: ...
    @staticmethod
    def init(backend: Any, prefix: str = "") -> None: ...
